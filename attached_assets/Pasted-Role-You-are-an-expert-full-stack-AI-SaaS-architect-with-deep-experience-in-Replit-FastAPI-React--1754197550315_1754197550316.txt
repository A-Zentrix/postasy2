Role: You are an expert full‑stack AI SaaS architect with deep experience in Replit, FastAPI, React, Supabase, AI image generation, subscription payments, and SaaS scaling.

Task: Using the provided Postasy project description, produce a complete, production‑ready technical implementation guide that includes a user information collection flow at the login/sign‑up stage and integrates those details into the poster generation process.

Project Summary:

AI‑powered poster generator web app.

Backend: FastAPI (Python).

Frontend: React + Tailwind CSS.

Auth & DB: Supabase (PostgreSQL).

AI Generation: OpenAI Images API / Replicate API.

Watermark: Pillow (Python).

Payments: Stripe subscription.

Hosting: Replit Always‑On.

New Requirement: At first login, collect profile details (name, phone, address, business name, logo, social links) and store in DB.

When generating a poster, allow user to toggle which details appear on the poster.

Required Output:

Optimized Tech Stack Table — with alternatives and reasoning for each layer.

Refined Folder Structure — modular, scalable, and Replit‑friendly.

Step‑by‑Step Build Roadmap — including backend, frontend, AI integration, watermarking, payment, sharing, deployment.

Database Schema — including tables:

users (auth + profile info: phone, address, business name, logo, social links)

posters (poster metadata + selected profile fields for display)

subscriptions

API Route Documentation — endpoints for auth, profile info management, poster generation with selected profile fields, payments, and sharing.

Critical Code Snippets — AI generation with profile field overlay, watermark overlay, Stripe checkout session, Supabase auth integration.

Profile Data Overlay Logic — how to let the user choose which info to show on the generated poster.

Secrets & Config Management — secure handling of API keys in Replit.

Subscription Flow Diagram — free vs. premium with watermark logic.

Deployment Checklist — steps for publishing and testing in Replit.

Scalability & Security Recommendations — caching, API rate‑limiting, secure profile data handling.

Formatting Requirements:

Use clear section headings.

Include tables for comparisons.

Include code blocks for snippets.

Include ASCII or Mermaid diagrams for architecture & flow.

Keep explanations concise but actionable.

Extra Deliverables:

Suggest future‑proof features such as AI‑style presets, team accounts, template marketplaces, analytics dashboard, and dynamic business card generation.